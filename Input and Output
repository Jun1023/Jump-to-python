# 1. 주어진 자연수가 홀수인지 짝수인지 판별해 주는 함수(is_odd)를 작성해 보자.
# 1. Let's write a function (is_odd) that determines whether a given natural number is odd or even.

# Answer
def is_odd(number):
    if number % 2 == 1:
        return True
    else:
        return False

# 2. 입력으로 들어오는 모든 수의 평균 값을 계산해 주는 함수를 작성해 보자. (단 입력으로 들어오는 수의 개수는 정해져 있지 않다.)
# 2. Let's calculate the average value by filling the function with all the numbers that come in. (Not a single input to a number is specified.)

def avg_numbers(*args):
    result = 0
    for i in args:
        result += i
    return result / len(args)
print(avg_numbers(1, 2)) # 1.5
print(avg_numbers(1,2,3,4,5)) # 3.0

# 3. 다음은 두 개의 숫잦를 입력받아 돌려주는 프로그램이다. 이 프로그램을 수행해 보자.
# 3. The following is a program where two numbers are entered and returned. Let's carry out this program.
# Problem
"""
첫번째 숫자를 입력하세요:3
두번째 숫자를 입력하세요:6
두 수의 합은 36 입니다
"""
# 3과 6을 입력했을 때 9가 아닌 36이라는 결과값을 돌려주었다. 이 프로그램의 오류를 수정해 보자.
# When I entered 3 and 6, I returned the result value of 36 instead of 9. Let's correct the errors in this program.

input1 = int(input("첫번째 숫자를 입력하세요:"))
input2 = int(input("두번째 숫자를 입력하세요:"))

total = input1 + input2
print("두 수의 합은 %s 입니다" % total)

# Answer : int를 붙이기 전에는 문자열이기 때문에 3 + 6 이 36이 나왔던 것이다. int를 붙여서 정수를 만들어주면 원하는 값인 9가 출력된다.
#          Before the int, 3 + 6 was 36 because it was a string. If an integer is made with an int, the desired value of 9 is printed out.

# 4. 다음 중 출력 결과가 다른 것 한 개를 골라 보자.
# 4. Let's choose one of the following with different output results.
# 1) print("you" "need" "python")
# 2) print("you"+"need"+"python")
# 3) print("you", "need", "python")
# 4) print("".join(["you", "need", "python"]))

# Answer : 정답은 3번이다. ","를 넣으면 공백이 첨부 되어 you need python 이 출력된다. 다른 문제들은 youneedpython이 출력된다.
#          The answer is number three. ","and you need python is printed with a space attached. Other problems are printed out youneedpython.

# 5. 다음은 "test.txt"라는 파일에 "Life is too short" 문자열을 저장한 후 다시 그 파일을 읽어서 출력하는 프로그램이다.
# 5. The following is a program that saves the "Life is too short" string in a file called "test.txt" and then reads the file again and outputs it.


# 이 프로그램은 우리가 예상한 "Life is too short"라는 문장을 출력하지 않는다. 우리가 예상한 값을 출력할 수 있도록 프로그램을 수정해 보자.
# The program does not print out the sentence "Life is too short" we expected. Let's modify the program so that we can print out the expected values.

f1 = open("test.txt", 'w')
f1.write("Life is too short")
f1.close()

f2 = open("test.txt", 'r')
print(f2.read())
f2.close()

# Answer : f1와 f2 모두 close를 해주지 않아 저장을 하지 않았다.
#          I didn't save both f1 and f2 because they didn't close.

# 6. 사용자의 입력 파일(test.txt)에 저장하는 프로그램을 작성해 보자. (단 프로그램을 다시 실행하더라도 기존에 작성한 내용을 유지하고 새로 입력한 내용을 추가해야 한다.)
# 6. Let's write a program to save to your input file (test.txt). (However, if you re-run the program, you will still need to keep the original content and add new entries.)

user_input = input("저장할 내용을 입력하세요:")
f = open('test.txt', 'a')
f.write(user_input)
f.write("\n")
f.close()

# Answer : 'a'를 이용해 써져있는 내용을 지우지 않고 추가하고, \n을 통해 줄바꿈을 해준다.
#          Use 'a' to add the written content without erasing it, and to change the line through \n.

# 7. 다음과 같은 내용을 지닌 파일 text.txt가 있다. 이 파일의 내용 중 'java'라는 문자열을 'python'으로 바꾸어서 저장해 보자.
# 7. There is file text.txt with the following content. Let's change the string 'Java' to 'Phyton' and save the contents of this file.
"""
Life is too short
you need java
"""

f = open('test.txt', 'r')
body = f.read()
f.close()

body = body.replace('java', 'python')

f = open('test.txt', 'w')
f.write(body)
f.close()

# Answer : test.txt를 body에 넣고, replace를 통해 'java'를 'python'으로 바꾸고 다시 test.txt에 넣었다.
#          Put test.txt into body, change 'java' to 'python' through place and put it back into test.txt.
